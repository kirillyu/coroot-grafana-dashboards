{
  "__inputs": [
    {
      "name": "DS_VICTORIA-P01-PRODUCTION",
      "label": "Victoria-p01-production",
      "description": "",
      "type": "datasource",
      "pluginId": "prometheus",
      "pluginName": "Prometheus"
    }
  ],
  "__elements": {},
  "__requires": [
    {
      "type": "grafana",
      "id": "grafana",
      "name": "Grafana",
      "version": "11.4.0"
    },
    {
      "type": "datasource",
      "id": "prometheus",
      "name": "Prometheus",
      "version": "1.0.0"
    },
    {
      "type": "panel",
      "id": "table",
      "name": "Table",
      "version": ""
    },
    {
      "type": "panel",
      "id": "text",
      "name": "Text",
      "version": ""
    }
  ],
  "annotations": {
    "list": [
      {
        "builtIn": 1,
        "datasource": {
          "type": "grafana",
          "uid": "-- Grafana --"
        },
        "enable": true,
        "hide": true,
        "iconColor": "rgba(0, 211, 255, 1)",
        "name": "Annotations & Alerts",
        "type": "dashboard"
      }
    ]
  },
  "editable": true,
  "fiscalYearStartMonth": 0,
  "graphTooltip": 0,
  "id": null,
  "links": [],
  "panels": [
    {
      "gridPos": {
        "h": 5,
        "w": 24,
        "x": 0,
        "y": 0
      },
      "id": 2,
      "options": {
        "code": {
          "language": "plaintext",
          "showLineNumbers": false,
          "showMiniMap": false
        },
        "content": "# todo\n\n1. Instances (tcp listen addr)\n2. Upstreams\n3. mem leak\n4. error % неправильный он на исходящие, как видимо и все остально по ххтп",
        "mode": "markdown"
      },
      "pluginVersion": "11.4.0",
      "title": "Panel Title",
      "type": "text"
    },
    {
      "datasource": {
        "type": "prometheus",
        "uid": "${Datasource}"
      },
      "description": "<b>Errors http%</b> - показывает максимальный процент ошибок, которое этот сервис давал кому-либо за этот период.\n<b>Response time 95%%</b>  - показывает максимальный отклик в 95 персентиле ошибок, который этот сервис давал кому-либо за этот период",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "custom": {
            "align": "auto",
            "cellOptions": {
              "type": "auto"
            },
            "filterable": true,
            "inspect": false
          },
          "fieldMinMax": true,
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          }
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "container_id"
            },
            "properties": [
              {
                "id": "custom.width",
                "value": 388
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "namespace"
            },
            "properties": [
              {
                "id": "custom.width",
                "value": 172
              },
              {
                "id": "links",
                "value": [
                  {
                    "targetBlank": true,
                    "title": "View namespace based detailed information",
                    "url": " ./d/fbf5b9d8-b564-4636-86c8-8da5f2ef8bb1/coroot-namespace?orgId=1&var-Datasource=UZm8s2UGz&var-namespace=${__data.fields.namespace}&var-service=All&${__url_time_range}"
                  }
                ]
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "service"
            },
            "properties": [
              {
                "id": "custom.width",
                "value": 132
              },
              {
                "id": "links",
                "value": [
                  {
                    "targetBlank": true,
                    "title": "View namespace and service based detailed information",
                    "url": " ./d/fbf5b9d8-b564-4636-86c8-8da5f2ef8bb1/coroot-namespace?orgId=1&var-Datasource=UZm8s2UGz&var-namespace=${__data.fields.namespace}&var-service=${__data.fields.service}&${__url_time_range}"
                  }
                ]
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "application_type"
            },
            "properties": [
              {
                "id": "custom.width",
                "value": 147
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "Errors http %"
            },
            "properties": [
              {
                "id": "custom.width",
                "value": 125
              },
              {
                "id": "mappings",
                "value": [
                  {
                    "options": {
                      "match": "null+nan",
                      "result": {
                        "color": "green",
                        "index": 0,
                        "text": "0"
                      }
                    },
                    "type": "special"
                  }
                ]
              },
              {
                "id": "unit",
                "value": "percentunit"
              },
              {
                "id": "custom.cellOptions",
                "value": {
                  "mode": "lcd",
                  "type": "gauge",
                  "valueDisplayMode": "color"
                }
              },
              {
                "id": "thresholds",
                "value": {
                  "mode": "absolute",
                  "steps": [
                    {
                      "color": "green",
                      "value": null
                    },
                    {
                      "color": "red",
                      "value": 0.1
                    }
                  ]
                }
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "Response time 95%%"
            },
            "properties": [
              {
                "id": "custom.width",
                "value": 182
              },
              {
                "id": "unit",
                "value": "s"
              },
              {
                "id": "custom.cellOptions",
                "value": {
                  "type": "color-background"
                }
              },
              {
                "id": "thresholds",
                "value": {
                  "mode": "percentage",
                  "steps": [
                    {
                      "color": "green",
                      "value": null
                    },
                    {
                      "color": "#EAB839",
                      "value": 10
                    },
                    {
                      "color": "red",
                      "value": 35
                    }
                  ]
                }
              },
              {
                "id": "mappings",
                "value": [
                  {
                    "options": {
                      "match": "null+nan",
                      "result": {
                        "color": "#8a848480",
                        "index": 0,
                        "text": "No HTTP calls"
                      }
                    },
                    "type": "special"
                  }
                ]
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "Restarts"
            },
            "properties": [
              {
                "id": "custom.width",
                "value": 136
              },
              {
                "id": "custom.cellOptions",
                "value": {
                  "mode": "basic",
                  "type": "color-background"
                }
              },
              {
                "id": "thresholds",
                "value": {
                  "mode": "absolute",
                  "steps": [
                    {
                      "color": "green",
                      "value": null
                    },
                    {
                      "color": "red",
                      "value": 1
                    }
                  ]
                }
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "Throttling CPUs"
            },
            "properties": [
              {
                "id": "custom.width",
                "value": 154
              },
              {
                "id": "custom.cellOptions",
                "value": {
                  "mode": "basic",
                  "type": "color-background"
                }
              },
              {
                "id": "thresholds",
                "value": {
                  "mode": "absolute",
                  "steps": [
                    {
                      "color": "green",
                      "value": null
                    },
                    {
                      "color": "#EAB839",
                      "value": 0.01
                    },
                    {
                      "color": "red",
                      "value": 1
                    }
                  ]
                }
              },
              {
                "id": "mappings",
                "value": [
                  {
                    "options": {
                      "match": "null+nan",
                      "result": {
                        "index": 0,
                        "text": "0"
                      }
                    },
                    "type": "special"
                  }
                ]
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "Memory OOM"
            },
            "properties": [
              {
                "id": "mappings",
                "value": [
                  {
                    "options": {
                      "match": "null+nan",
                      "result": {
                        "color": "green",
                        "index": 0,
                        "text": "0"
                      }
                    },
                    "type": "special"
                  }
                ]
              },
              {
                "id": "custom.cellOptions",
                "value": {
                  "mode": "basic",
                  "type": "color-background"
                }
              },
              {
                "id": "thresholds",
                "value": {
                  "mode": "absolute",
                  "steps": [
                    {
                      "color": "green",
                      "value": null
                    },
                    {
                      "color": "red",
                      "value": 1
                    }
                  ]
                }
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "Disk latency"
            },
            "properties": [
              {
                "id": "unit",
                "value": "s"
              },
              {
                "id": "mappings",
                "value": []
              },
              {
                "id": "thresholds",
                "value": {
                  "mode": "absolute",
                  "steps": [
                    {
                      "color": "green",
                      "value": null
                    },
                    {
                      "color": "#EAB839",
                      "value": 0.01
                    },
                    {
                      "color": "red",
                      "value": 0.1
                    }
                  ]
                }
              },
              {
                "id": "custom.cellOptions",
                "value": {
                  "mode": "basic",
                  "type": "color-background"
                }
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "Network RTT"
            },
            "properties": [
              {
                "id": "unit",
                "value": "s"
              },
              {
                "id": "thresholds",
                "value": {
                  "mode": "absolute",
                  "steps": [
                    {
                      "color": "green",
                      "value": null
                    },
                    {
                      "color": "#EAB839",
                      "value": 0.01
                    },
                    {
                      "color": "red",
                      "value": 0.1
                    }
                  ]
                }
              },
              {
                "id": "custom.cellOptions",
                "value": {
                  "mode": "basic",
                  "type": "color-background"
                }
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "Retransmits"
            },
            "properties": [
              {
                "id": "custom.cellOptions",
                "value": {
                  "mode": "basic",
                  "type": "color-background"
                }
              },
              {
                "id": "thresholds",
                "value": {
                  "mode": "absolute",
                  "steps": [
                    {
                      "color": "green",
                      "value": null
                    },
                    {
                      "color": "#EAB839",
                      "value": 10
                    },
                    {
                      "color": "red",
                      "value": 150
                    }
                  ]
                }
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "Errors in logs %"
            },
            "properties": [
              {
                "id": "mappings",
                "value": [
                  {
                    "options": {
                      "match": "null+nan",
                      "result": {
                        "color": "#80808087",
                        "index": 0,
                        "text": "NO LOGS FOUND"
                      }
                    },
                    "type": "special"
                  }
                ]
              },
              {
                "id": "custom.cellOptions",
                "value": {
                  "mode": "basic",
                  "type": "color-background"
                }
              },
              {
                "id": "unit",
                "value": "percentunit"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "TCP Drops"
            },
            "properties": [
              {
                "id": "custom.cellOptions",
                "value": {
                  "mode": "basic",
                  "type": "color-background"
                }
              },
              {
                "id": "thresholds",
                "value": {
                  "mode": "absolute",
                  "steps": [
                    {
                      "color": "green",
                      "value": null
                    },
                    {
                      "color": "#EAB839",
                      "value": 1
                    },
                    {
                      "color": "red",
                      "value": 10
                    }
                  ]
                }
              },
              {
                "id": "mappings",
                "value": [
                  {
                    "options": {
                      "match": "null+nan",
                      "result": {
                        "color": "#808080",
                        "index": 0,
                        "text": "NOT FOUND"
                      }
                    },
                    "type": "special"
                  }
                ]
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 23,
        "w": 24,
        "x": 0,
        "y": 5
      },
      "id": 1,
      "options": {
        "cellHeight": "sm",
        "footer": {
          "countRows": false,
          "fields": "",
          "reducer": [
            "sum"
          ],
          "show": false
        },
        "frameIndex": 0,
        "showHeader": true,
        "sortBy": [
          {
            "desc": true,
            "displayName": "Response time 95%%"
          }
        ]
      },
      "pluginVersion": "11.4.0",
      "targets": [
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${DS_VICTORIA-P01-PRODUCTION}"
          },
          "editorMode": "code",
          "exemplar": false,
          "expr": "group by (container_id,namespace,service) (label_replace(label_replace(label_set(container_restarts_total{container_id=~\".+?$namespace\\\\/.+?$\", container_id=~\".+?\\\\/$service$\"},\"namespace\",\"system.slice\"),\"namespace\",\"$1\",\"container_id\",\"\\\\/.+?\\\\/(.+?)\\\\/.*\"),\"service\",\"$1\",\"container_id\",\".*\\\\/(.+?)$\"))\n#group by (container_id,application_type) (container_application_type{container_id=~\".+?calico-node$\"})",
          "format": "table",
          "hide": false,
          "instant": false,
          "legendFormat": "__auto",
          "range": true,
          "refId": "Naming"
        },
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${Datasource}"
          },
          "editorMode": "code",
          "exemplar": false,
          "expr": "group by (container_id,application_type) (container_application_type{container_id=~\".+?$namespace\\\\/.+?$\", container_id=~\".+?\\\\/$service$\"})\n#group by (container_id,application_type) (container_application_type{container_id=~\".+?calico-node$\"})",
          "format": "table",
          "hide": false,
          "instant": false,
          "legendFormat": "__auto",
          "range": true,
          "refId": "Type"
        },
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${DS_VICTORIA-P01-PRODUCTION}"
          },
          "editorMode": "code",
          "exemplar": false,
          "expr": "#range_sum(increase(sum by (container_id) (container_http_requests_total{ status!=\"200\",container_id=~\".+?$namespace\\\\/.+?$\", container_id=~\".+?$service$\"})[1m])[$__range])/(range_sum(increase(sum by (container_id) (container_http_requests_total{status!=\"200\",container_id=~\".+?$namespace\\\\/.+?$\", container_id=~\".+?$service$\"})[1m])[$__range])+range_sum(increase(sum by (container_id) (container_http_requests_total{ status=\"200\",container_id=~\".+?$namespace\\\\/.+?$\", container_id=~\".+?$service$\"})[1m])[$__range]) ) \nWITH (\n  metric = max by (source, actual_destination,status) (\n    label_replace(\n      sum by (container_id, actual_destination) (rate(container_http_requests_total{container_id=~\"\\\\/k8s.*\", status!~\"2..\"})[1m0s])/ on(container_id, actual_destination) sum by (container_id, actual_destination) (rate(container_http_requests_total{container_id=~\"\\\\/k8s.*\"})[1m0s]),\n      \"source\", \"$1\", \"container_id\", \"\\\\/k.+?\\\\/.*\\\\/(.+?)\\\\/.*\"\n    ) or label_replace(\n     sum by (container_id, actual_destination) ( rate(container_http_requests_total{container_id=~\"\\\\/system.*\", status!~\"2..\"})[1m0s])/ on(container_id, actual_destination) sum by (container_id, actual_destination) (rate(container_http_requests_total{container_id=~\"\\\\/system.*\"})[1m0s]),\n      \"source\", \"$1\", \"container_id\", \"\\\\/system.slice\\\\/(.+?)$\"\n    )\n  ), \n  edges_query =  group by(source,actual_destination,target_namespace,target_pod,target_service)(\n    label_replace(\n        label_copy(\n            #coroot:http_requests{source_namespace=~\"metricsedge\", source_service=~\".*\", target_namespace!~\"(monitoring|system\\\\.slice)\"} or on (source_pod,actual_destination) я думаю мы не смотрим вокруг выбранного нса\n            coroot:http_requests{target_namespace=~\"$namespace\", target_service=~\"$service\"},\n            \"source_pod\",\"source\"\n        ),\n        \"actual_destination\",\"$1\",\"actual_destination\",\"(.+?)\"\n    )\n  )\n)\n\nmax by (container_id) ((metric * on(source,actual_destination) group_left(target_namespace,target_pod,target_service) edges_query) * on(target_pod) group_left(container_id)\ngroup by (target_pod,container_id) (\n    label_replace(\n        container_restarts_total{container_id=~\"\\\\/k.*\"},\n        \"target_pod\", \"$1\", \"container_id\", \"\\\\/k.+?\\\\/.*\\\\/(.+?)\\\\/.*\"\n    ) or on (target_pod,container_id) label_replace(\n        container_restarts_total{container_id=~\"\\\\/system.*\"},\n        \"target_pod\", \"$1\", \"container_id\", \"\\\\/sys.+?\\\\/(.+?)$\"\n    )\n    ))",
          "format": "table",
          "hide": false,
          "instant": false,
          "legendFormat": "errors",
          "range": true,
          "refId": "Errors"
        },
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${Datasource}"
          },
          "editorMode": "code",
          "exemplar": false,
          "expr": "#max_over_time(histogram_quantile(0.95, sum by (le, container_id)(    rate( container_http_requests_duration_seconds_total_bucket{container_id=~\".+?$namespace\\\\/.+?$\", container_id=~\".+?$service$\"}[$__interval]))    )[$__range])\n\nWITH (\n  metric = max by (source, actual_destination) (\n    label_replace(\n      max_over_time(histogram_quantile(0.95, sum by (le, container_id,actual_destination)(\n    rate( container_http_requests_duration_seconds_total_bucket[$__interval]))\n    )[$__range]),\n      \"source\", \"$1\", \"container_id\", \"\\\\/k.+?\\\\/.*\\\\/(.+?)\\\\/.*\"\n    ) or label_replace(\n     max_over_time(histogram_quantile(0.95, sum by (le, container_id,actual_destination)(\n    rate( container_http_requests_duration_seconds_total_bucket[$__interval]))\n    )[$__range]),\n      \"source\", \"$1\", \"container_id\", \"\\\\/system.slice\\\\/(.+?)$\"\n    )\n  ), \n  edges_query =  group by(source,actual_destination,target_namespace,target_pod,target_service)(\n    label_replace(\n        label_copy(\n            #coroot:http_requests{source_namespace=~\"metricsedge\", source_service=~\".*\", target_namespace!~\"(monitoring|system\\\\.slice)\"} or on (source_pod,actual_destination) я думаю мы не смотрим вокруг выбранного нса\n            coroot:http_requests{target_namespace=~\"$namespace\", target_service=~\"$service\"},\n            \"source_pod\",\"source\"\n        ),\n        \"actual_destination\",\"$1\",\"actual_destination\",\"(.+?)\"\n    )\n  )\n)\n\nmax by (container_id) ((metric * on(source,actual_destination) group_left(target_namespace,target_pod,target_service) edges_query) * on(target_pod) group_left(container_id)\ngroup by (target_pod,container_id) (\n    label_replace(\n        container_restarts_total{container_id=~\"\\\\/k.*\"},\n        \"target_pod\", \"$1\", \"container_id\", \"\\\\/k.+?\\\\/.*\\\\/(.+?)\\\\/.*\"\n    ) or on (target_pod,container_id) label_replace(\n        container_restarts_total{container_id=~\"\\\\/system.*\"},\n        \"target_pod\", \"$1\", \"container_id\", \"\\\\/sys.+?\\\\/(.+?)$\"\n    )\n    ))",
          "format": "table",
          "hide": false,
          "instant": false,
          "legendFormat": "response time 95%%",
          "range": true,
          "refId": "Latency"
        },
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${DS_VICTORIA-P01-PRODUCTION}"
          },
          "editorMode": "code",
          "exemplar": false,
          "expr": "range_sum(increase(sum by (container_id) (container_restarts_total{ container_id=~\".+?$namespace\\\\/.+?$\", container_id=~\".+?$service$\"})[1m])[$__range])",
          "format": "table",
          "hide": false,
          "instant": false,
          "legendFormat": "errors",
          "range": true,
          "refId": "Restart"
        },
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${Datasource}"
          },
          "editorMode": "code",
          "exemplar": false,
          "expr": "range_max(rate(max by (container_id) (container_resources_cpu_throttled_seconds_total{ container_id=~\".+?$namespace\\\\/.+?$\", container_id=~\".+?$service$\"})[1m])[$__range])",
          "format": "table",
          "hide": false,
          "instant": false,
          "legendFormat": "errors",
          "range": true,
          "refId": "Throttle"
        },
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${DS_VICTORIA-P01-PRODUCTION}"
          },
          "editorMode": "code",
          "exemplar": false,
          "expr": "range_sum(increase(sum by (container_id) (container_oom_kills_total{ container_id=~\".+?$namespace\\\\/.+?$\", container_id=~\".+?$service$\"})[1m])[$__range])",
          "format": "table",
          "hide": false,
          "instant": false,
          "legendFormat": "oom",
          "range": true,
          "refId": "Memory OOM"
        },
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${Datasource}"
          },
          "editorMode": "code",
          "exemplar": false,
          "expr": "range_max(increase(max by (container_id) (container_resources_disk_delay_seconds_total{ container_id=~\".+?$namespace\\\\/.+?$\", container_id=~\".+?$service$\"})[1m])[$__range])",
          "format": "table",
          "hide": false,
          "instant": false,
          "legendFormat": "oom",
          "range": true,
          "refId": "DiskDelay"
        },
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${DS_VICTORIA-P01-PRODUCTION}"
          },
          "editorMode": "code",
          "exemplar": false,
          "expr": "range_max(increase(max by (container_id) (container_net_latency_seconds{ container_id=~\".+?$namespace\\\\/.+?$\", container_id=~\".+?$service$\"})[1m])[$__range])",
          "format": "table",
          "hide": false,
          "instant": false,
          "legendFormat": "oom",
          "range": true,
          "refId": "NetDelay"
        },
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${Datasource}"
          },
          "editorMode": "code",
          "exemplar": false,
          "expr": "range_max(increase(max by (container_id) (container_net_tcp_retransmits_total{ container_id=~\".+?$namespace\\\\/.+?$\", container_id=~\".+?$service$\"})[1m])[$__range])",
          "format": "table",
          "hide": false,
          "instant": false,
          "legendFormat": "oom",
          "range": true,
          "refId": "NetRetrans"
        },
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${DS_VICTORIA-P01-PRODUCTION}"
          },
          "editorMode": "code",
          "exemplar": false,
          "expr": "range_sum(increase(sum by (container_id) (container_log_messages_total{level=\"error\", container_id=~\".+?$namespace\\\\/.+?$\", container_id=~\".+?$service$\"})[1m])[$__range])/range_sum(increase(sum by (container_id) (container_log_messages_total{ container_id=~\".+?$namespace\\\\/.+?$\", container_id=~\".+?$service$\"})[1m])[$__range])",
          "format": "table",
          "hide": false,
          "instant": false,
          "legendFormat": "oom",
          "range": true,
          "refId": "LogErrors"
        },
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${Datasource}"
          },
          "editorMode": "code",
          "exemplar": false,
          "expr": "range_sum(\n  sum by (container_id) \n    (\n      sum by (pod) (\n        increase(\n          container_network_advance_tcp_stats_total{namespace=~\"$namespace\", pod=~\"$service.*\",tcp_state=~\".+?drop\"}[1m]\n        )\n      ) * on(pod) group_left(container_id) \n      group by (container_id,pod) (\n        label_replace(\n          container_restarts_total{container_id=~\"\\\\/k8s\\\\/$namespace\\\\/.+?$\", container_id=~\".+?\\\\/$service$\"}\n          ,\"pod\",\"$1\",\"container_id\",\"\\\\/k8s\\\\/$namespace\\\\/(.+?)\\\\/.*\"\n        )\n      )\n    )\n  [$__range]\n)",
          "format": "table",
          "hide": false,
          "instant": false,
          "legendFormat": "oom",
          "range": true,
          "refId": "TCP_Drop"
        }
      ],
      "title": "Overview",
      "transformations": [
        {
          "id": "groupBy",
          "options": {
            "fields": {
              "Value #A": {
                "aggregations": [],
                "operation": "groupby"
              },
              "Value #B": {
                "aggregations": [
                  "last"
                ],
                "operation": "aggregate"
              },
              "Value #C": {
                "aggregations": [
                  "max"
                ],
                "operation": "aggregate"
              },
              "Value #DiskDelay": {
                "aggregations": [
                  "max"
                ],
                "operation": "aggregate"
              },
              "Value #Errors": {
                "aggregations": [
                  "max"
                ],
                "operation": "aggregate"
              },
              "Value #Latency": {
                "aggregations": [
                  "last"
                ],
                "operation": "aggregate"
              },
              "Value #LogErrors": {
                "aggregations": [
                  "last"
                ],
                "operation": "aggregate"
              },
              "Value #Memory OOM": {
                "aggregations": [
                  "max"
                ],
                "operation": "aggregate"
              },
              "Value #Naming": {
                "aggregations": []
              },
              "Value #NetDelay": {
                "aggregations": [
                  "max"
                ],
                "operation": "aggregate"
              },
              "Value #NetRetrans": {
                "aggregations": [
                  "max"
                ],
                "operation": "aggregate"
              },
              "Value #Restart": {
                "aggregations": [
                  "max"
                ],
                "operation": "aggregate"
              },
              "Value #TCP_Drop": {
                "aggregations": [
                  "max"
                ],
                "operation": "aggregate"
              },
              "Value #Throttle": {
                "aggregations": [
                  "max"
                ],
                "operation": "aggregate"
              },
              "Value #Type": {
                "aggregations": []
              },
              "application_type": {
                "aggregations": [],
                "operation": "groupby"
              },
              "container_id": {
                "aggregations": [],
                "operation": "groupby"
              },
              "namespace": {
                "aggregations": [],
                "operation": "groupby"
              },
              "service": {
                "aggregations": [],
                "operation": "groupby"
              }
            }
          }
        },
        {
          "id": "merge",
          "options": {}
        },
        {
          "id": "organize",
          "options": {
            "excludeByName": {},
            "indexByName": {
              "Value #Errors (max)": 4,
              "Value #Latency (last)": 5,
              "application_type": 3,
              "container_id": 0,
              "namespace": 1,
              "service": 2
            },
            "renameByName": {
              "Value #DiskDelay (max)": "Disk latency",
              "Value #Errors (max)": "Errors http %",
              "Value #Latency (last)": "Response time 95%%",
              "Value #LogErrors (last)": "Errors in logs %",
              "Value #Memory OOM (max)": "Memory OOM",
              "Value #NetDelay (max)": "Network RTT",
              "Value #NetRetrans (max)": "Retransmits",
              "Value #Restart (max)": "Restarts",
              "Value #TCP_Drop (max)": "TCP Drops",
              "Value #Throttle (max)": "Throttling CPUs",
              "application_type": ""
            }
          }
        }
      ],
      "type": "table"
    }
  ],
  "refresh": "",
  "schemaVersion": 40,
  "tags": [],
  "templating": {
    "list": [
      {
        "current": {},
        "includeAll": false,
        "name": "Datasource",
        "options": [],
        "query": "prometheus",
        "refresh": 1,
        "regex": "",
        "type": "datasource"
      },
      {
        "allValue": ".*",
        "current": {},
        "datasource": {
          "type": "prometheus",
          "uid": "${DS_VICTORIA-P01-PRODUCTION}"
        },
        "definition": "query_result(group by (container_id,namespace,service) (label_replace(label_replace(label_set(container_restarts_total{container_id!=\"\"},\"namespace\",\"system.slice\"),\"namespace\",\"$1\",\"container_id\",\"\\\\/.+?\\\\/(.+?)\\\\/.*\"),\"service\",\"$1\",\"container_id\",\".*\\\\/(.+?)$\")))",
        "includeAll": true,
        "name": "namespace",
        "options": [],
        "query": {
          "qryType": 3,
          "query": "query_result(group by (container_id,namespace,service) (label_replace(label_replace(label_set(container_restarts_total{container_id!=\"\"},\"namespace\",\"system.slice\"),\"namespace\",\"$1\",\"container_id\",\"\\\\/.+?\\\\/(.+?)\\\\/.*\"),\"service\",\"$1\",\"container_id\",\".*\\\\/(.+?)$\")))",
          "refId": "PrometheusVariableQueryEditor-VariableQuery"
        },
        "refresh": 2,
        "regex": "/namespace=\"(.+?)\"/",
        "type": "query"
      },
      {
        "allValue": ".*",
        "current": {},
        "datasource": {
          "type": "prometheus",
          "uid": "${Datasource}"
        },
        "definition": "query_result(group by (container_id) (container_restarts_total{container_id=~\".+?${namespace}.+?$\"}))",
        "includeAll": true,
        "multi": true,
        "name": "service",
        "options": [],
        "query": {
          "qryType": 3,
          "query": "query_result(group by (container_id) (container_restarts_total{container_id=~\".+?${namespace}.+?$\"}))",
          "refId": "PrometheusVariableQueryEditor-VariableQuery"
        },
        "refresh": 2,
        "regex": "/.+?container_id=\".*\\/(.+?)\"/",
        "type": "query"
      }
    ]
  },
  "time": {
    "from": "now-15m",
    "to": "now"
  },
  "timepicker": {},
  "timezone": "",
  "title": "Coroot overview",
  "uid": "fbf5b9d8-b564-4636-86c8-8da5f2ef8bba",
  "version": 55,
  "weekStart": ""
}